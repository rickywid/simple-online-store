{"version":3,"sources":["app/hooks.ts","medal.png","star.png","components/testimonials.tsx","components/landing.tsx","components/cart/cartSlice.tsx","data.ts","components/cart/cartItem.tsx","components/cart/cart.tsx","components/products/productItemDetail.tsx","components/products/productView.tsx","components/products/productRelatedItems.tsx","components/products/product.tsx","components/products/products.tsx","routes.tsx","App.tsx","app/store.ts","serviceWorker.ts","theme/theme.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","Testimonials","numStars","text","reviewer","listStyleType","mb","Array","map","height","widht","src","Star","alt","fontSize","fontStyle","fontWeight","textAlign","Landing","bg","backgroundImage","process","minHeight","base","display","justifyContent","padding","sm","margin","xl","position","background","borderRadius","boxShadow","mt","Medal","left","top","width","style","marginRight","to","colorScheme","size","cartSlice","createSlice","name","initialState","cart","reducers","add","state","action","push","payload","remove","filter","item","id","update","qty","orderQty","clear","selectCart","actions","products","products2","CartItem","removeItem","useState","inStock","setInStock","dispatch","useEffect","checkItemStockQty","cartItem","i","quantity","p","lg","alignItems","image","maxW","md","mr","color","company","description","defaultValue","min","max","onChange","updateQty","parseInt","onClick","isNumeric","price","Cart","useDisclosure","isOpen","onOpen","onClose","history","useHistory","clearCart","borderRight","borderLeft","variant","total","forEach","parseFloat","toFixed","totalCost","isDisabled","length","isCentered","result","characters","charactersLength","charAt","Math","floor","random","generateConfirmationNo","ProductItemDetail","productId","product","setQty","qtyInput","setQtyInput","showAlert","setShowAlert","showError","setShowError","itemInCart","remainingQty","flex","as","setTimeout","value","focusBorderColor","outline","status","className","ProductView","header","columns","spacing","right","boxSize","ProductRelatedItems","randomId","includes","getRelatedProducts","Product","product_id","useParams","Products","routes","path","exact","App","pt","pb","zIndex","borderBottom","justify","store","configureStore","reducer","cartReducer","Boolean","window","location","hostname","match","theme","extendTheme","styles","global","body","bgImage","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.105adcd4.chunk.js","sourcesContent":["import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","export default __webpack_public_path__ + \"static/media/medal.b40d60fb.png\";","export default __webpack_public_path__ + \"static/media/star.3b0993f9.png\";","import { Box, Flex, Image, ListItem, Text, UnorderedList } from \"@chakra-ui/react\";\nimport Star from \"../star.png\";\n\ninterface IProps {\n    numStars: number;\n    text: string;\n    reviewer: string;\n}\n\nconst Testimonials = ({ numStars, text, reviewer }: IProps) => {\n\n    const displayStar = () => {\n        return [...Array(numStars)].map(() => <Image height=\"50px\" widht=\"auto\" src={Star} alt=\"star\" />)\n    }\n\n    return (\n        <UnorderedList>\n            <ListItem listStyleType=\"none\">\n                <Box>\n                    <Flex mb=\"3\">\n                        {displayStar()}\n                    </Flex>\n                    <Text\n                        fontSize=\"large\"\n                        fontStyle=\"italic\"\n                        fontWeight=\"bold\"\n                    >\n                        \"{text}\"\n                    </Text>\n                    <Text textAlign=\"right\">- {reviewer}</Text>\n                </Box>\n            </ListItem>\n        </UnorderedList>\n    )\n}\n\nexport default Testimonials;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Box, Button, Heading, Image } from '@chakra-ui/react';\nimport Medal from \"../medal.png\";\nimport Testimonials from './testimonials';\n\nfunction Landing() {\n    return (\n        <Box bg=\"pink\">\n            <Box\n                bg=\"radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(210,163,183,1) 90%)\"\n            >\n                <Box height=\"100px\" backgroundImage={`${process.env.PUBLIC_URL}/assets/plaid.jpg`}></Box>\n                <Box\n                    minHeight={{\n                        base: \"calc(100vh - 275px)\"\n                    }}\n                    display=\"flex\"\n                    justifyContent=\"space-around\"\n                    padding={{\n                        base: \"90px 0\",\n                        sm: \"0\"\n                    }}\n                >\n                    <Box\n                        margin=\"auto\"\n                        display={{\n                            base: \"none\",\n                            xl: \"initial\"\n                        }}\n                    >\n                        <Box>\n                            <Testimonials\n                                numStars={5}\n                                text=\"Tastes better than my own cooking!..\"\n                                reviewer=\"Gordan Ramsay\"\n                            />\n                        </Box>\n                        <Box>\n                            <Testimonials\n                                numStars={4}\n                                text=\"Juicy and fresh that will stay in your memory forever!...\"\n                                reviewer=\"Bobby Flay\"\n                            />\n                        </Box>\n                        <Box>\n                            <Testimonials\n                                numStars={5}\n                                text=\"Pricey but worth every dollar!..\"\n                                reviewer=\"Jamie Oliver\"\n                            />\n                        </Box>\n                    </Box>\n                    <Box\n                        textAlign=\"center\"\n                        position=\"relative\"\n                        margin=\"auto\"\n                    >\n                        <Heading\n                            background=\"#fff800\"\n                            display=\"inline-block\"\n                            padding=\"20px 40px\"\n                            borderRadius=\"45px\"\n                            boxShadow=\"-8px 8px 0px -2px #9fa311\"\n                        >\n                            #1 Voted!\n                        </Heading>\n                        <Box mt=\"10\" mb=\"10\">\n                            <Box>\n                                <Image\n                                    src={Medal}\n                                    height={{\n                                        base: \"110px\",\n                                        sm: \"150px\"\n                                    }}\n                                    alt=\"medal\"\n                                    position=\"absolute\"\n                                    left={{\n                                        base: \"46px\",\n                                        sm: \"-33px\"\n                                    }}\n                                    top={{\n                                        base: \"143px\",\n                                        sm: \"200px\"\n                                    }}\n                                />\n                                <Image\n                                    src={`${process.env.PUBLIC_URL}/assets/sandwich (35).png`}\n                                    alt=\"burger\"\n                                    width={{\n                                        base: \"75%\",\n                                        sm: \"100%\"\n                                    }}\n                                    margin={{\n                                        base: \"auto\"\n                                    }}\n                                />\n                            </Box>\n                        </Box>\n                        <Heading textAlign=\"center\">Porilainen Sandwich</Heading>\n                    </Box>\n                    <Box\n                        margin=\"auto\"\n                        display={{\n                            base: \"none\",\n                            xl: \"initial\"\n                        }}\n                    >\n                        <Box>\n                            <Testimonials\n                                numStars={4}\n                                text=\"Best sandwiches and burgers in the world!..\"\n                                reviewer=\"Guy Fieri\"\n                            />\n                        </Box>\n                        <Box>\n                            <Testimonials\n                                numStars={5}\n                                text=\" The sandwiches are not only unique, but also very tasty!..\"\n                                reviewer=\"Wolfgang Puck\"\n                            />\n                        </Box>\n                        <Box>\n                            <Testimonials\n                                numStars={4}\n                                text=\"Always satisfies my hunger and my wallet!...\"\n                                reviewer=\"Rachel Ray\"\n                            />\n                        </Box>\n                    </Box>\n                </Box>\n                <Box\n                    padding=\"30px 0\"\n                    backgroundImage={`${process.env.PUBLIC_URL}/assets/plaid.jpg`}\n                    textAlign=\"center\"\n                >\n                    <Link style={{ marginRight: \"10px\" }} to={`/product/35`}>\n                        <Button colorScheme=\"teal\" size=\"lg\">Order Now</Button>\n                    </Link>\n                    <Link to={`/products`}>\n                        <Button colorScheme=\"blue\" size=\"lg\">View Products</Button>\n                    </Link>\n                </Box>\n            </Box>\n        </Box>\n    );\n}\n\nexport default Landing;\n","\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '../../app/store';\n\nexport interface ICart {\n    cart: {\n        id: number;\n        company: string;\n        name: string;\n        description: string;\n        orderQty: number;\n        price: string;\n        image: string;\n    }[]\n}\n\n// initial state \nconst initialState: ICart = {\n    cart: []\n}\n\nexport const cartSlice = createSlice({\n    name: 'cart',\n    initialState,\n    reducers: {\n        add: (state, action: PayloadAction<any>) => {\n            state.cart.push(action.payload);\n        },\n        remove: (state, action: PayloadAction<number>) => {\n\n            state.cart = state.cart.filter(item => item.id !== action.payload);\n        },\n        update: (state, action: PayloadAction<{ id: number, qty: number }>) => {\n\n            const { id, qty } = action.payload;\n            \n            state.cart = state.cart.map(item => {\n                if (item.id === id) { item.orderQty = qty; }\n                return item;\n            });\n        },\n        clear: (state, action: PayloadAction<[]>) => {\n            state.cart = action.payload;\n        }\n    }\n});\n\nexport const selectCart = (state: RootState) => state.cart.cart;\nexport const { add, remove, update, clear } = cartSlice.actions;\nexport default cartSlice.reducer;\n","export interface IProduct {\n    id: number;\n    company: string;\n    name: string;\n    description: string;\n    price: string;\n    quantity: number;\n    addons: string;\n    image: string;\n}\n\nexport const products: IProduct[] = [\n    {\n        \"id\": 1,\n        \"company\": \"Bosco, Romaguera and Breitenberg\",\n        \"name\": \"Slider\",\n        \"description\": \"Thinly sliced roast beef on a baguette, served hot, usually au jus (with juice)\",\n        \"price\": \"122.00\",\n        \"quantity\": 15,\n        \"addons\": \"spinach\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (1).png`\n    },\n    {\n        \"id\": 2,\n        \"company\": \"Mueller - Jacobi\",\n        \"name\": \"Croque-monsieur\",\n        \"description\": \"Essentially a miniature hamburger about three inches in diameter, but may contain other ingredients besides a hamburger patty\",\n        \"price\": \"289.00\",\n        \"quantity\": 20,\n        \"addons\": \"mushrooms\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (2).png`\n    },\n    {\n        \"id\": 3,\n        \"company\": \"Williamson - Grant\",\n        \"name\": \"Ham\",\n        \"description\": \"Two thin slices of crustless, lightly buttered white bread, containing paper-thin slices of peeled cucumber\",\n        \"price\": \"360.00\",\n        \"quantity\": 18,\n        \"addons\": \"onions\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (3).png`\n    },\n    {\n        \"id\": 4,\n        \"company\": \"O'Conner - Rosenbaum\",\n        \"name\": \"Tofu Sandwich\",\n        \"description\": \"Open sandwich consisting of a sliced bun, topped with Mett (seasoned minced pork without bacon), frequently with a garnish of raw onion rings or diced raw onion\",\n        \"price\": \"876.00\",\n        \"quantity\": 13,\n        \"addons\": \"ham\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (4).png`\n    },\n    {\n        \"id\": 5,\n        \"company\": \"Smitham - Kautzer\",\n        \"name\": \"Falafel\",\n        \"description\": \"Meatballs in marinara sauce, with melted Parmesan or provolone cheese, on a long bun or section of Italian loaf. Might include Italian-style accompaniments such as bell peppers, basil, or Italian-dressed lettuce\",\n        \"price\": \"203.00\",\n        \"quantity\": 11,\n        \"addons\": \"feta\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (5).png`\n    },\n    {\n        \"id\": 6,\n        \"company\": \"Donnelly, Schmitt and Lesch\",\n        \"name\": \"Smørrebrød\",\n        \"description\": \"A ground beef patty, often with vegetables, sauces and other meats, usually on a round bun.\",\n        \"price\": \"248.00\",\n        \"quantity\": 5,\n        \"addons\": \"pepperoni\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (6).png`\n    },\n    {\n        \"id\": 7,\n        \"company\": \"Bernier, Murphy and Lubowitz\",\n        \"name\": \"Cheese\",\n        \"description\": \"Breaded, deep-fried pork cutlet (tonkatsu)\",\n        \"price\": \"849.00\",\n        \"quantity\": 16,\n        \"addons\": \"spinach\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (7).png`\n    },\n    {\n        \"id\": 8,\n        \"company\": \"Swift and Sons\",\n        \"name\": \"Chow mein\",\n        \"description\": \"Sausages, may be pork, beef or vegetarian. Served with red sauce, brown sauce or no sauce at all.\",\n        \"price\": \"495.00\",\n        \"quantity\": 13,\n        \"addons\": \"breakfast bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (8).png`\n    },\n    {\n        \"id\": 9,\n        \"company\": \"Hilpert Inc\",\n        \"name\": \"Melt\",\n        \"description\": \"Made of ground beef, tomato sauces, spices and many onions and peppers. It is a popular food served at local family gatherings and fund raising benefits, usually made in large quantities.\",\n        \"price\": \"323.00\",\n        \"quantity\": 6,\n        \"addons\": \"mushrooms\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (9).png`\n    },\n    {\n        \"id\": 10,\n        \"company\": \"Mayert - Leffler\",\n        \"name\": \"Yakisoba-pan\",\n        \"description\": \"A grilled, over-stuffed submarine roll, containing shaved steak, and topped with salami, melted provolone, sautéed onions, and bell peppers.\",\n        \"price\": \"389.00\",\n        \"quantity\": 6,\n        \"addons\": \"hot sauce\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (10).png`\n    },\n    {\n        \"id\": 11,\n        \"company\": \"Upton - Gleichner\",\n        \"name\": \"Fool's Gold Loaf\",\n        \"description\": \"A hot dog bun containing a Chicago-style corn-roll tamale, topped with chili\",\n        \"price\": \"920.00\",\n        \"quantity\": 18,\n        \"addons\": \"sun-dried tomato\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (11).png`\n    },\n    {\n        \"id\": 12,\n        \"company\": \"Cartwright and Sons\",\n        \"name\": \"Bánh mì\",\n        \"description\": \"Sautéed beef tongue and scrambled eggs, served open-faced ada pav\",\n        \"price\": \"751.00\",\n        \"quantity\": 5,\n        \"addons\": \"garlic\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (12).png`\n    },\n    {\n        \"id\": 13,\n        \"company\": \"Torp and Sons\",\n        \"name\": \"Italian beef\",\n        \"description\": \"A triple-decker sandwich made with sliced turkey or chicken, bacon, tomato and lettuce, usually contains mayonnaise\",\n        \"price\": \"592.00\",\n        \"quantity\": 17,\n        \"addons\": \"breakfast bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (13).png`\n    },\n    {\n        \"id\": 14,\n        \"company\": \"Hamill, Mitchell and Mertz\",\n        \"name\": \"Reuben\",\n        \"description\": \"A grilled, over-stuffed submarine roll, containing shaved steak, and topped with salami, melted provolone, sautéed onions, and bell peppers.\",\n        \"price\": \"158.00\",\n        \"quantity\": 2,\n        \"addons\": \"breakfast bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (14).png`\n    },\n    {\n        \"id\": 15,\n        \"company\": \"Abernathy, Ledner and Swaniawski\",\n        \"name\": \"Ploughman's lunch\",\n        \"description\": \"Type of sandwich that may be ordered at a deli, choices include type of bread (toasted or untoasted,) type of meat (cold cut), type of sliced cheese, vegetable fillings (lettuce, tomato, onion, etc.) and condiments\",\n        \"price\": \"26.00\",\n        \"quantity\": 8,\n        \"addons\": \"ham\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (15).png`\n    },\n    {\n        \"id\": 16,\n        \"company\": \"Kohler LLC\",\n        \"name\": \"Bun kebab\",\n        \"description\": \"A half-inch slice of thick sausage, usually with diced red or sweet onion, sliced pickles, ketchup, mustard, and sometimes mayonnaise, on white bread\",\n        \"price\": \"522.00\",\n        \"quantity\": 4,\n        \"addons\": \"feta\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (16).png`\n    },\n    {\n        \"id\": 17,\n        \"company\": \"Zemlak - Grant\",\n        \"name\": \"Sloppy joe\",\n        \"description\": \"Ham and turkey topped with broiled cheese. Sometimes includes bacon and tomato.\",\n        \"price\": \"263.00\",\n        \"quantity\": 3,\n        \"addons\": \"tomatoes\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (17).png`\n    },\n    {\n        \"id\": 18,\n        \"company\": \"Conn - O'Hara\",\n        \"name\": \"Salt beef bagel\",\n        \"description\": \"A hot dog bun containing a Chicago-style corn-roll tamale, topped with chili\",\n        \"price\": \"849.00\",\n        \"quantity\": 11,\n        \"addons\": \"olives\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (18).png`\n    },\n    {\n        \"id\": 19,\n        \"company\": \"Bruen - Harris\",\n        \"name\": \"Crisp\",\n        \"description\": \"This sandwich can be made in a pan. Margarine on the outside, pizza sauce and fillings on the inside. The term \\\"pudgy pie\\\" is sometimes used to refer to pie irons, a gadget used for campfire cooking.\",\n        \"price\": \"555.00\",\n        \"quantity\": 6,\n        \"addons\": \"pineapple\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (19).png`\n    },\n    {\n        \"id\": 20,\n        \"company\": \"Douglas - Hilpert\",\n        \"name\": \"Shawarma\",\n        \"description\": \"Corned beef, sauerkraut, Swiss cheese, topped with Russian or Thousand Island dressing, on rye bread, then grilled\",\n        \"price\": \"51.00\",\n        \"quantity\": 20,\n        \"addons\": \"anchovies\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (20).png`\n    },\n    {\n        \"id\": 21,\n        \"company\": \"Purdy LLC\",\n        \"name\": \"Club\",\n        \"description\": \"Sandwiches prepared with thinly sliced or pressed salted and dried beef. Some chipped beef is smoked to add flavor.\",\n        \"price\": \"819.00\",\n        \"quantity\": 9,\n        \"addons\": \"meatballs\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (21).png`\n    },\n    {\n        \"id\": 22,\n        \"company\": \"O'Reilly and Sons\",\n        \"name\": \"Muffuletta\",\n        \"description\": \"Canned baked beans on white or brown bread. Sometimes butter is also used.\",\n        \"price\": \"704.00\",\n        \"quantity\": 2,\n        \"addons\": \"hot sauce\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (22).png`\n    },\n    {\n        \"id\": 23,\n        \"company\": \"Cruickshank, Altenwerth and Barrows\",\n        \"name\": \"Cuban\",\n        \"description\": \"Spicy cudighi (a Michigan variety of Cotechino Italian sausage), on a long, hard roll, often topped with mozzarella and tomato sauce\",\n        \"price\": \"379.00\",\n        \"quantity\": 13,\n        \"addons\": \"breakfast bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (23).png`\n    },\n    {\n        \"id\": 24,\n        \"company\": \"Bernier, Ratke and Auer\",\n        \"name\": \"Pork chop bun\",\n        \"description\": \"Chickpea salad is a vegan sandwich filling that has a texture similar to tuna salad. Chickpea salad consists of mashed up chickpeas, vegenaise, onions, and other seasonings. Some versions also include tuna.\",\n        \"price\": \"296.00\",\n        \"quantity\": 6,\n        \"addons\": \"artichoke\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (24).png`\n    },\n    {\n        \"id\": 25,\n        \"company\": \"Ledner - Reichert\",\n        \"name\": \"Primanti\",\n        \"description\": \"Corned beef with mustard, usually on rye bread\",\n        \"price\": \"156.00\",\n        \"quantity\": 10,\n        \"addons\": \"anchovies\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (25).png`\n    },\n    {\n        \"id\": 26,\n        \"company\": \"O'Connell LLC\",\n        \"name\": \"Toast\",\n        \"description\": \"A patty dish popular in the Balkan region of Southeastern Europe, a sandwich utilizes the Pljeskavica patty and bread.\",\n        \"price\": \"243.00\",\n        \"quantity\": 15,\n        \"addons\": \"olives\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (26).png`\n    },\n    {\n        \"id\": 27,\n        \"company\": \"Gerhold - Dickinson\",\n        \"name\": \"Ham\",\n        \"description\": \"Thinly cut steak, grilled and served on a toasted bun, usually with tomato, avocado and mayonnaise\",\n        \"price\": \"628.00\",\n        \"quantity\": 6,\n        \"addons\": \"Canadian bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (27).png`\n    },\n    {\n        \"id\": 28,\n        \"company\": \"Padberg Group\",\n        \"name\": \"Baked bean\",\n        \"description\": \"They are typically prepared with buttered rye bread, Limburger cheese, sliced onion and mustard. Pictured is Limburger cheese and bread.\",\n        \"price\": \"362.00\",\n        \"quantity\": 11,\n        \"addons\": \"grilled onions\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (28).png`\n    },\n    {\n        \"id\": 29,\n        \"company\": \"Mills LLC\",\n        \"name\": \"Bauru\",\n        \"description\": \"Roast pork, ham, mustard, Swiss cheese, and dill pickles served on sweet bread.\",\n        \"price\": \"341.00\",\n        \"quantity\": 3,\n        \"addons\": \"green peppers\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (29).png`\n    },\n    {\n        \"id\": 30,\n        \"company\": \"Shields LLC\",\n        \"name\": \"Yakisoba-pan\",\n        \"description\": \"A sandwich that consists of hamburger made with naan bread. Sometimes ham is used instead of beef.\",\n        \"price\": \"754.00\",\n        \"quantity\": 20,\n        \"addons\": \"Canadian bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (30).png`\n    },\n    {\n        \"id\": 31,\n        \"company\": \"Carter and Sons\",\n        \"name\": \"Dagwood\",\n        \"description\": \"Not a sandwich, it refers to a set of toppings to put in a sandwich, refers to the colors of the Italian flag: red (tomato), white (mayonnaise) and green (avocado)\",\n        \"price\": \"191.00\",\n        \"quantity\": 6,\n        \"addons\": \"garlic\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (31).png`\n    },\n    {\n        \"id\": 32,\n        \"company\": \"Schinner - Kozey\",\n        \"name\": \"Chipped beef\",\n        \"description\": \"The Pork Tenderloin sandwich features a thin, tenderized deep fried pork loin,usually served on a bun.\",\n        \"price\": \"417.00\",\n        \"quantity\": 19,\n        \"addons\": \"chicken\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (32).png`\n    },\n    {\n        \"id\": 33,\n        \"company\": \"Schuster, Mitchell and Shields\",\n        \"name\": \"Ftira\",\n        \"description\": \"A potato fritter coated in chickpea flour (batata vada) in a bun\",\n        \"price\": \"736.00\",\n        \"quantity\": 4,\n        \"addons\": \"meatballs\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (33).png`\n    },\n    {\n        \"id\": 34,\n        \"company\": \"Collins - Hartmann\",\n        \"name\": \"Ice cream\",\n        \"description\": \"Made with single-, double- or triple-layered, buttered, thin white bread with crust removed, toasted or untoasted, contains thinly sliced meat and may include ham, eggs, cheese, tomatoes, green peppers, lettuce, olives, and sometimes other vegetables, even asparagus.\",\n        \"price\": \"582.00\",\n        \"quantity\": 19,\n        \"addons\": \"anchovies\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (34).png`\n    },\n    {\n        \"id\": 35,\n        \"company\": \"Hand, Schimmel and Rau\",\n        \"name\": \"Porilainen\",\n        \"description\": \"A patty dish popular in the Balkan region of Southeastern Europe, a sandwich utilizes the Pljeskavica patty and bread.\",\n        \"price\": \"239.00\",\n        \"quantity\": 14,\n        \"addons\": \"onions\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (35).png`\n    },\n    {\n        \"id\": 36,\n        \"company\": \"Adams Inc\",\n        \"name\": \"Tripleta\",\n        \"description\": \"A tamale inserted in a Mexican bread, bolillo, easy to find in Mexico City streets in the morning, also called torta de tamal\",\n        \"price\": \"891.00\",\n        \"quantity\": 9,\n        \"addons\": \"feta\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (36).png`\n    }\n]\n\nexport const products2: IProduct[] = [\n    {\n        \"id\": 1,\n        \"company\": \"Yost - Spinka\",\n        \"name\": \"Wurstbrot (sausage bread)\",\n        \"description\": \"Beef (usually thin cut steak) and cheese\",\n        \"price\": \"175.00\",\n        \"quantity\": 5,\n        \"addons\": \"grilled onions\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (1).png`\n    },\n    {\n        \"id\": 2,\n        \"company\": \"Grant, Murphy and Kertzmann\",\n        \"name\": \"Melt\",\n        \"description\": \"Flat bread with fillings of beef, spinach, tomatoes, cucumber, tahini sauce wrapped and grilled. Other toppings to can be added.\",\n        \"price\": \"47.00\",\n        \"quantity\": 0,\n        \"addons\": \"ground beef\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (2).png`\n    },\n    {\n        \"id\": 3,\n        \"company\": \"Grant, Blanda and Nicolas\",\n        \"name\": \"Pambazo\",\n        \"description\": \"Two slices of bread with cheddar-like cheese (and sometimes ham) in between, which is then toasted or grilled\",\n        \"price\": \"879.00\",\n        \"quantity\": 6,\n        \"addons\": \"garlic\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (3).png`\n    },\n    {\n        \"id\": 4,\n        \"company\": \"Weissnat - Haag\",\n        \"name\": \"Zapiekanka\",\n        \"description\": \"A deli-style burger similar to the hoagie, often contains french fries, with other variations, prepared with masala steak, chicken, polony, Vienna sausages, calamari, fish, or chargrilled steak\",\n        \"price\": \"535.00\",\n        \"quantity\": 16,\n        \"addons\": \"pepperoni\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (4).png`\n    },\n    {\n        \"id\": 5,\n        \"company\": \"Stanton - Kihn\",\n        \"name\": \"Roti john\",\n        \"description\": \"A bun filled with a mixture of (usually) loose meat, cabbage, and cheese. The fillings are baked inside the bread, similar to a kolache. Popular in the Midwestern United States, especially Nebraska.\",\n        \"price\": \"584.00\",\n        \"quantity\": 18,\n        \"addons\": \"tomatoes\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (5).png`\n    },\n    {\n        \"id\": 6,\n        \"company\": \"Senger Group\",\n        \"name\": \"Hot chicken\",\n        \"description\": \"Form of barbecue in which pork is cooked using a slow cook method until the meat becomes tender enough that it can be \\\"pulled\\\", or easily broken into individual pieces\",\n        \"price\": \"73.00\",\n        \"quantity\": 13,\n        \"addons\": \"anchovies\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (6).png`\n    },\n    {\n        \"id\": 7,\n        \"company\": \"Senger, O'Kon and McLaughlin\",\n        \"name\": \"Bosna\",\n        \"description\": \"Two thin slices of crustless, lightly buttered white bread, containing paper-thin slices of peeled cucumber\",\n        \"price\": \"561.00\",\n        \"quantity\": 1,\n        \"addons\": \"bacon\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (7).png`\n    },\n    {\n        \"id\": 8,\n        \"company\": \"Bradtke Inc\",\n        \"name\": \"Kokoretsi\",\n        \"description\": \"A sandwich containing a Denver omelette\",\n        \"price\": \"902.00\",\n        \"quantity\": 14,\n        \"addons\": \"spinach\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (8).png`\n    },\n    {\n        \"id\": 9,\n        \"company\": \"Feest, Mohr and Prohaska\",\n        \"name\": \"Cuban\",\n        \"description\": \"A triple-decker burger made with sliced turkey or chicken, bacon, tomato and lettuce, usually contains mayonnaise\",\n        \"price\": \"665.00\",\n        \"quantity\": 17,\n        \"addons\": \"sausage\",\n        \"image\": `${process.env.PUBLIC_URL}/assets/sandwich (9).png`\n    }\n]\n","import React, { useEffect, useState } from 'react';\nimport {\n    NumberInput,\n    NumberInputField,\n    NumberIncrementStepper,\n    NumberDecrementStepper,\n    NumberInputStepper,\n    Box,\n    Text,\n    Image,\n    Td,\n    Tr,\n    Flex,\n} from '@chakra-ui/react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { selectCart, update } from './cartSlice';\nimport { products } from '../../data';\nimport { Link } from 'react-router-dom';\n\ninterface ICartItem {\n    item: any;\n    removeItem: any;\n}\n\nfunction CartItem({ item, removeItem }: ICartItem) {\n    const [inStock, setInStock] = useState<boolean>(true);\n    const cart = useAppSelector(selectCart);\n    const dispatch = useAppDispatch();\n\n    useEffect(() => {\n        checkItemStockQty();\n    });\n\n    const cartItem = () => {\n        return cart.filter(i => i.id === item.id);\n    }\n\n    const checkItemStockQty = () => {\n        products[item.id - 1].quantity - cartItem()[0].orderQty === 0 && setInStock(false);\n\n    }\n\n    const updateQty = (id: number, qty: number) => {\n\n        cart.map(item => {\n            if (item.id === id) {\n\n                const remainingQty = products[item.id - 1].quantity - qty;\n\n                if (remainingQty === 0) {\n                    setInStock(false);\n                    return null;\n                }\n            }\n\n            setInStock(true)\n\n            return item;\n        });\n\n        dispatch(update({ id, qty }));\n    }\n\n    return (\n        <Tr key={item.id}>\n            <Td\n                p=\"0\"\n            >\n                <Flex>\n                    <Box\n                        display={{\n                            base: \"initial\",\n                            lg: \"flex\"\n                        }}\n                        alignItems=\"center\"\n                    >\n                        <Image\n                            src={item.image}\n                            alt={item.name}\n                            maxW={{\n                                base: \"100%\",\n                                md: \"200px\"\n                            }}\n                            display=\"inline-block\"\n                            mr=\"5\"\n                            mb=\"5\"\n                        />\n                        <Box\n                            display=\"inline-block\"\n                            width={{\n                                base: \"100%\",\n                                md: \"500px\"\n                            }}\n                        >\n                            <Text\n                                fontSize=\"smaller\"\n                                color=\"#707070\"\n                            >\n                                {item.company}\n                            </Text>\n                            <Text\n                                fontSize=\"larger\"\n                                fontWeight=\"bold\"\n                                mb=\"5\"\n                            >{item.name}</Text>\n                            <Text mb=\"5\">{item.description}</Text>\n                            <Flex\n                                alignItems=\"center\"\n                            >\n                                <Text \n                                    fontWeight=\"bold\"\n                                    mr=\"3\"\n                                >QTY</Text>\n                                <NumberInput\n                                    defaultValue={item.orderQty}\n                                    min={1}\n                                    max={inStock ? 100 : cartItem()[0].orderQty}\n                                    size=\"md\"\n                                    onChange={(qty) => updateQty(item.id, parseInt(qty))}\n                                    width=\"75px\"\n                                    mr=\"5\"\n                                >\n                                    <NumberInputField />\n                                    <NumberInputStepper>\n                                        <NumberIncrementStepper />\n                                        <NumberDecrementStepper />\n                                    </NumberInputStepper>\n                                </NumberInput>\n                                <Flex>\n                                    <Link to={`/product/${item.id}`}><small>View</small></Link>\n                                    <Text>&nbsp;/&nbsp;</Text>\n                                    <small onClick={() => removeItem(item.id)}>Remove</small>\n                                </Flex>\n                            </Flex>\n                        </Box>\n                    </Box>\n                </Flex>\n            </Td>\n            <Td\n                isNumeric\n                fontWeight=\"bold\"\n                width={{\n                    base: \"40%\",\n                    md: \"initial\"\n                }}\n                p=\"0\"\n            >\n                <Box>\n                    <Text>$ {item.price}</Text>\n                </Box>\n            </Td>\n        </Tr>\n    )\n}\n\nexport default CartItem;\n","import {\n    Box, Button, Container, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Table, Tbody, Td, Th, Thead, Tr, useDisclosure\n} from '@chakra-ui/react';\nimport { useHistory } from \"react-router-dom\";\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { remove, selectCart, clear } from '../../components/cart/cartSlice';\nimport CartItem from './cartItem';\n\nfunction Cart() {\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const cart = useAppSelector(selectCart);\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n    const totalCost = () => {\n        let total = 0;\n\n        cart.forEach((item) => {\n            total += parseFloat(item.price) * item.orderQty;\n        });\n\n        return total.toFixed(2);\n    }\n\n    const removeItem = (id: number) => {\n        dispatch(remove(id))\n    }\n\n    const clearCart = () => {\n        dispatch(clear([]));\n    }\n\n    const generateConfirmationNo = () => {\n\n        /**\n         * Number + String generator\n         * https://stackoverflow.com/questions/1349404/generate-random-string-characters-in-javascript\n         */\n\n        var result = '';\n        var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n        var charactersLength = characters.length;\n        for (var i = 0; i < 20; i++) {\n            result += characters.charAt(Math.floor(Math.random() *\n                charactersLength));\n        }\n        return result;\n    }\n\n    return (\n        <Container\n            width={{\n                base: \"auto\"\n            }}\n            maxW=\"container.xl\"\n            bg=\"#FFFFFF\"\n            borderRight={{\n                base: \"none\",\n                lg: \"15px solid #ffa1b2\"\n            }}\n            borderLeft={{\n                base: \"none\",\n                lg: \"15px solid #ffa1b2\"\n            }}\n            p={{\n                base: \"60px 10px 40px 10px\",\n                md: \"60px 40px 40px 60px\"\n            }}\n            minHeight=\"calc(100vh - 75px)\"\n            margin={{\n                base: \"0 15px\",\n                lg: \"auto\"\n            }}\n        >\n            <Table\n                variant=\"simple\"\n                mb=\"10\"\n            >\n                <Thead>\n                    <Tr>\n                        <Th>Item</Th>\n                        <Th isNumeric>Price</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                    {cart.map(item => {\n                        return (\n                            <CartItem\n                                item={item}\n                                removeItem={removeItem}\n                            />\n                        )\n                    })}\n                    <Tr>\n                        <Td fontWeight=\"bold\">\n                            Total\n                        </Td>\n                        <Td isNumeric fontWeight=\"bold\">\n                            $ {totalCost()}\n                        </Td>\n                    </Tr>\n                </Tbody>\n            </Table>\n            <Box\n                textAlign=\"right\"\n                display={{\n                    base: \"flex\",\n                    sm: \"inherit\"\n                }}\n                justifyContent=\"space-between\"\n            >\n                <Button\n                    colorScheme=\"teal\"\n                    mr=\"4\"\n                    onClick={onOpen}\n                    isDisabled={cart.length ? false : true}\n                    width={{\n                        base: \"48%\",\n                        sm: \"auto\"\n                    }}\n                >\n                    Place Order\n                </Button>\n                <Button\n                    onClick={clearCart}\n                    colorScheme=\"red\"\n                    width={{\n                        base: \"48%\",\n                        sm: \"auto\"\n                    }}\n                >\n                    Cancel Order\n                </Button>\n            </Box>\n\n            <Modal onClose={() => {\n                onClose();\n                clearCart();\n                history.push('/');\n            }}\n                isOpen={isOpen}\n                isCentered\n            >\n                <ModalOverlay />\n                <ModalContent>\n                    <ModalHeader>Your order has been placed.</ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody>\n                        <p>This is your confirmation order #:</p>\n                        {generateConfirmationNo()}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button onClick={() => {\n                            clearCart();\n                            onClose();\n                            history.push('/');\n                        }}>Close</Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default Cart;\n","import {\n    Box,\n    Button,\n    Heading,\n    NumberDecrementStepper,\n    NumberIncrementStepper,\n    NumberInput,\n    NumberInputField,\n    NumberInputStepper,\n    Text,\n    Image,\n    Alert,\n    AlertIcon\n} from \"@chakra-ui/react\";\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom'\nimport { useAppDispatch } from '../../app/hooks';\nimport { add, update } from '../cart/cartSlice';\nimport { useAppSelector } from '../../app/hooks';\nimport { selectCart } from '../cart/cartSlice';\nimport { products, IProduct } from '../../data';\n\ninterface IProps {\n    productId: string;\n}\n\nconst ProductItemDetail = ({ productId }: IProps) => {\n    const product: IProduct = products[parseInt(productId) - 1];\n    const { id, company, name, description, quantity, price, image } = product;\n    const [qty, setQty] = useState<any>(1);\n    const [inStock, setInStock] = useState<boolean>(true);\n    const [qtyInput, setQtyInput] = useState<number>();\n    const [showAlert, setShowAlert] = useState<boolean>(false);\n    const [showError, setShowError] = useState<boolean>(false);\n    const dispatch = useAppDispatch();\n    const cart = useAppSelector(selectCart);\n\n    const addToCart = () => {\n\n        const data = {\n            id,\n            company,\n            name,\n            description,\n            orderQty: qty,\n            price,\n            image\n        }\n\n        dispatch(add(data));\n        setShowAlert(true);\n        setShowError(false);\n        setTimeout(() => {\n            setShowAlert(false);\n        }, 3000);\n    }\n\n    const itemInCart = () => {\n        return cart.filter(item => item.id === parseInt(productId));\n    }\n\n    const remainingQty = () => {\n\n        return products[id - 1].quantity - qty;\n    }\n\n    const updateQty = (id: number, qty: number) => {\n        if (remainingQty() < 1) {\n            setInStock(false);\n            setShowError(true);\n            setQtyInput(qty);\n\n        } else {\n            setInStock(true);\n            setQty(qty);\n            setQtyInput(1000);\n        }\n\n        dispatch(update({ id, qty }));\n    }\n\n    return (\n        <Box\n            display={{\n                base: \"initial\",\n                lg: \"flex\"\n            }}\n        >\n            <Box p=\"8\" flex=\"1\">\n                <Image src={image} alt={name} />\n            </Box>\n            <Box flex=\"1\">\n                <Box p=\"8\" flex=\"1\">\n                    <Heading\n                        as=\"h2\"\n                        size=\"xl\"\n                        display=\"inline-block\"\n                        background=\"linear-gradient(0deg, rgba(240,202,199,1) 0%, rgba(240,202,199,0) 153%)\"\n                        padding=\"15px 30px\"\n                        borderRadius=\"45px\"\n                        boxShadow=\"-8px 8px 0px -2px #cd9b97\"\n                        mb=\"10\"\n                    >\n                        {name}\n                    </Heading>\n                    <Text\n                        fontSize=\"smaller\"\n                        color=\"#707070\"\n                    >\n                        {company}\n                    </Text>\n                    <Heading as=\"h3\" size=\"lg\" mb={5}>${price}</Heading>\n                    <Text mb=\"3\">{description}</Text>\n                    <Text mb=\"3\" fontWeight=\"bold\">QTY: {quantity}</Text>\n                    <Text fontSize=\"smaller\">Product no. {id}</Text>\n                </Box>\n                <Box position=\"relative\">\n                    <Box\n                        display={{\n                            base: \"initial\",\n                            lg: \"flex\"\n                        }}\n                        justifyContent={{\n                            md: \"space-between\"\n                        }}\n                        mb=\"5\"\n                    >\n                        <Box\n                            width={{\n                                base: \"100%\",\n                                lg: \"48%\"\n                            }}\n                            mb={{\n                                base: \"3\",\n                            }}\n                        >\n                            <Button\n                                onClick={addToCart}\n                                isDisabled={itemInCart().length > 0}\n                                colorScheme=\"teal\"\n                                width={{\n                                    base: \"100%\",\n                                }}\n                            >\n                                Add to Cart\n                            </Button>\n                        </Box>\n                        <Box\n                            width={{\n                                base: \"100%\",\n                                lg: \"48%\"\n                            }}\n                        >\n                            <Link style={{ width: \"100%\" }} to={`/products`}\n                            ><Button\n                                colorScheme=\"blue\"\n                                width={{\n                                    base: \"100%\",\n                                }}\n                            >See more products</Button>\n                            </Link>\n                        </Box>\n                    </Box>\n                    <NumberInput\n                        defaultValue={1}\n                        value={qty}\n                        min={1}\n                        max={inStock ? 1000 : qtyInput}\n                        onChange={(qty) => updateQty(id, parseInt(qty))}\n                        focusBorderColor={inStock ? \"initial\" : \"1px solid red\"}\n                        outline={inStock ? \"initial\" : \"1px solid red\"}\n                        mb=\"5\"\n                        mt=\"5\"\n                        isDisabled={itemInCart().length > 0}\n                    >\n                        <NumberInputField />\n                        <NumberInputStepper>\n                            <NumberIncrementStepper />\n                            <NumberDecrementStepper />\n                        </NumberInputStepper>\n                    </NumberInput>\n                    {!inStock && showError && (\n                        <Alert\n                            status=\"error\"\n                            className=\"animate__animated animate__fadeInUp\"\n                            position=\"absolute\"\n                        >\n                            <AlertIcon />\n                            Max quantity amount reached.\n                        </Alert>\n                    )}\n                    {showAlert && (\n                        <Alert status=\"success\" className=\"animate__animated animate__fadeInUp\">\n                            <AlertIcon />\n                            Successfully added to cart\n                        </Alert>\n                    )}\n                </Box>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ProductItemDetail;","import { Box, Center, Container, Heading, Image, SimpleGrid } from \"@chakra-ui/react\";\nimport { Link } from \"react-router-dom\";\nimport { IProduct } from \"../../data\";\n\ninterface IProps {\n    products: IProduct[];\n    header?: string;\n}\n\nconst ProductView = ({ products, header }: IProps) => {\n    return (\n        <Container\n            maxW=\"container.lg\"\n            bg=\"#FFFFFF\"\n        >\n            {header &&\n                <Heading\n                    as=\"h2\"\n                    size=\"xl\"\n                    mb=\"100\"\n                    display=\"inline-block\"\n                    background=\"linear-gradient(0deg, rgba(240,202,199,1) 0%, rgba(240,202,199,0) 153%)\"\n                    padding=\"15px 30px\"\n                    borderRadius=\"45px\"\n                    boxShadow=\"-8px 8px 0px -2px #cd9b97\"\n                    width={{\n                        base: \"100%\",\n                        sm: \"auto\"\n                    }}\n                    textAlign=\"center\"\n                >\n                    {header}\n                </Heading>\n            }\n            <SimpleGrid columns={[1, 2, 3]} spacing=\"40px\">\n                {products.map((product: IProduct) => {\n                    return (\n                        <Link key={product.id} to={`/product/${product.id}`}>\n                            <Box\n                                position=\"relative\"\n                            >\n                                <Center\n                                    height=\"70px\"\n                                    width=\"70px\"\n                                    background=\"#5ccdb2\"\n                                    borderRadius=\"50%\"\n                                    color=\"white\"\n                                    font-weight=\"bold\"\n                                    position=\"absolute\"\n                                    top=\"-33px\"\n                                    right=\"27px\"\n                                    boxShadow=\"-4px 4px 4px -1px rgb(135 133 133 / 49%)\"\n                                    fontWeight=\"bold\"\n                                >\n                                    <p>${product.price}</p>\n                                </Center>\n                                <Image\n                                    boxSize=\"180px\"\n                                    src={product.image}\n                                    alt={product.name}\n                                    margin=\"0 auto\"\n                                    borderRadius=\"10px\"\n                                    padding=\"10px\"\n                                />\n                                <Heading\n                                    as=\"h3\"\n                                    size=\"sm\"\n                                    fontWeight=\"bold\"\n                                    textAlign=\"center\"\n                                >\n                                    {product.name}\n                                </Heading>\n                                <p>{product.description}</p>\n                            </Box>\n                        </Link>\n                    )\n                })}\n            </SimpleGrid>\n        </Container>\n    )\n}\n\nexport default ProductView;","import { Heading } from '@chakra-ui/react';\nimport { products } from '../../data';\nimport ProductView from './productView';\n\nconst ProductRelatedItems = () => {\n\n    const getRelatedProducts = () => {\n        let randomId: number[] = [];\n\n        for (let i = 0; i < 6; i++) {\n            randomId.push(Math.floor(Math.random() * (39 - 1) + 1))\n        }\n\n        return products.filter(product => {\n            return randomId.includes(product.id);\n        });\n    }\n\n    return (\n        <>\n            <Heading\n                as=\"h3\"\n                size=\"md\"\n                mb=\"100\"\n            >You might also like...</Heading>\n            <ProductView\n                products={getRelatedProducts()}\n            />\n        </>\n    )\n}\n\nexport default ProductRelatedItems;","import {\n    Container,\n    Divider\n} from '@chakra-ui/react';\nimport { useParams } from 'react-router-dom'\nimport ProductItemDetail from './productItemDetail';\nimport ProductRelatedItems from './productRelatedItems';\n\ninterface ParamTypes {\n    product_id: string\n}\n\nfunction Product() {\n    const { product_id } = useParams<ParamTypes>();\n\n    return (\n        <Container\n            maxW=\"container.xl\"\n            bg=\"#FFFFFF\"\n            borderRight=\"15px solid #ffa1b2\"\n            borderLeft=\"15px solid #ffa1b2\"\n            p={{\n                base: \"60px 10px 40px 10px\",\n                md: \"60px 40px 40px 60px\"\n            }}\n        >\n            <ProductItemDetail productId={product_id} />\n            <Divider\n                mt=\"10\"\n                mb=\"10\"\n            />\n            <ProductRelatedItems />\n        </Container>\n    );\n}\n\nexport default Product;\n","import {\n    Box,\n    Container,\n} from '@chakra-ui/react';\nimport ProductView from './productView';\nimport { products, products2 } from '../../data';\n\nfunction Products() {\n    return (\n\n        <Container\n            maxW=\"container.xl\"\n            bg=\"#FFFFFF\"\n            borderRight=\"15px solid #ffa1b2\"\n            borderLeft=\"15px solid #ffa1b2\"\n            p={{\n                base: \"60px 20px 40px 20px\",\n                md:\"60px 40px 40px 60px\"\n            }}\n        >\n            <Box mb=\"20\">\n                <ProductView\n                    products={products}\n                    header=\"Sandwiches\"\n                />\n            </Box>\n            <Box mb=\"20\">\n                <ProductView\n                    products={products2}\n                    header=\"Burgers\"\n                />\n            </Box>\n        </Container>\n    );\n}\n\nexport default Products;\n","import React from \"react\";\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Landing from \"./components/landing\";\nimport Cart from \"./components/cart/cart\";\nimport Product from \"./components/products/product\";\nimport Products from \"./components/products/products\";\n\nconst routes = (\n    <Switch>\n        <Route path=\"/\">\n            <Landing />\n        </Route>\n        <Route exact path=\"products\">\n            <Products />\n        </Route>\n        <Route exact path=\"product/:product_id\">\n            <Product />\n        </Route>\n        <Route exact path=\"cart\">\n            <Cart />\n        </Route>\n    </Switch>\n)\n\nexport default routes;","import { Link } from 'react-router-dom';\nimport { useAppSelector } from './app/hooks';\nimport { Box, Container, Flex, Heading, Text } from '@chakra-ui/react';\nimport { BsCart3 } from 'react-icons/bs';\nimport routes from './routes';\nimport { selectCart } from './components/cart/cartSlice';\n\nfunction App() {\n\n  const cart = useAppSelector(selectCart);\n\n  return (\n    <Box>\n      <Box\n        bg=\"#FFFFFF\"\n        pt=\"5\"\n        pb=\"5\"\n        position=\"sticky\"\n        top=\"0\"\n        zIndex=\"2\"\n        borderBottom=\"15px solid #ffa1b2\"\n      >\n        <Container maxW=\"container.xl\">\n          <Flex justify=\"space-between\">\n            <Box>\n              <Link to={`/`}>\n                <Heading as=\"h2\" size=\"sm\">Simple Online Store</Heading>\n              </Link>\n            </Box>\n            <Link to={`/cart`}>\n              <Box>\n                <BsCart3\n                  style={{\n                    display: 'inline-block',\n                    fontSize: 25\n                  }} /> <Text display=\"inline-block\" fontWeight=\"bold\">{cart.length}</Text>\n              </Box>\n            </Link>\n          </Flex>\n        </Container>\n      </Box>\n      <Box>\n        {routes}\n      </Box>\n    </Box>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport cartReducer from '../components/cart/cartSlice';\n\nexport const store = configureStore({\n  reducer: {\n    cart: cartReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { extendTheme } from \"@chakra-ui/react\"\n\nconst theme = extendTheme({\n    styles: {\n        global: {\n            body: {\n                bgImage: '../assets/plaid.jpg',\n                color: '#202020'\n            }\n        }\n    }\n})\n\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport theme from './theme/theme';\nimport './global.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <Provider store={store}>\n        <Router>\n          <App />\n        </Router>\n      </Provider>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n/*\n- User can click on a View Products button on the Landing Page to display the Products Page.\n- User can see a card on the Products Page for each Product showing the product thumbnail, name, price, a short description, and a Select button.\n- User can see a Product Details page displayed when the Select button is clicked showing the same information from the product card, but also a unique product id, a long description, Add to Cart button, and a See More Products button.\n- User can see a confirmation message when the product is added to the shopping cart.\n- User can click on the See More Products page to return to the Products Page.\n- User can see a Shopping Cart button on both the Landing Page or the Products Page. Hint: a top bar might be a good common location for this button.\n- User can click on the Shopping Cart button to display the Shopping Cart page containing the product id, name, price, and quantity ordered input box for each product previously added to the Shopping Cart.\n- User can see a total purchase amount on the Shopping Card that is calculated as the sum of the quantities multiplied by the unit price for each product ordered.\n- User can adjust the quantity ordered for any product to adjust the total purchase amount.\n- User can click a Place Order button on the Shopping Cart Page to complete the order. User will see a confirmation number when the order has been placed.\n- User can click a Cancel Order button on the Shopping Cart Page to cancel the order. User will see the product quantities and the total purchase amount reset to zero.\n- User can click a See More Products button on the Shopping Cart Page to return to the Products Page. If the order hasn't been placed yet this will not clear the products that have already been added to the Products Page.\n\n\n- Show confirmation message when item is added to cart\n- Show confirmation message when item is added to cart (mobile view)\n- Get sandwich images\nstyle navbar\n*/"],"sourceRoot":""}